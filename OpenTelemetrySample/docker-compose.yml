version: '3.4'

services:
  webapplication:
    image: ${DOCKER_REGISTRY-}webapplication
    build:
      context: .
      dockerfile: WebApplication/Dockerfile
    ports:
      - "49166:80"
      
  zipkin-all-in-one:
    image: openzipkin/zipkin:latest
    ports:
      - "9411:9411"

  prometheus:
      container_name: prometheus
      image: prom/prometheus:latest
      #    volumes:
      #      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
      volumes:
        - type: bind
          source: ./prometheus/config/prometheus.yml
          target: /etc/prometheus/prometheus.yml
          read_only: true
        - type: volume
          source: prometheus
          target: /prometheus
      labels:
        org.label-schema.group: "monitoring"
      ports:
        - "9090:9090"

  grafana:
      image: grafana/grafana:latest
      ports:
        - "3000:3000"
      volumes:
        - type: bind
          source: ./grafana/config/grafana.ini
          target: /etc/grafana/grafana.ini
        - type: bind
          source: ./grafana/provisioning/dashboards
          target: /etc/grafana/provisioning/dashboards
        - type: bind
          source: ./grafana/provisioning/datasources
          target: /etc/grafana/provisioning/datasources
        - type: volume
          source: grafana
          target: /var/lib/grafana
      depends_on:
        - prometheus
      labels:
        org.label-schema.group: "monitoring"

  otel-collector:
      image: otel/opentelemetry-collector:latest
      command: [ "--config=/etc/otel-collector-config.yaml" ]
      volumes:
        - ./output:/etc/output:rw
        - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
      ports:
        - "8888:8888"   # Prometheus metrics exposed by the collector
        - "8889:8889"   # Prometheus exporter metrics
        - "4317:4317"   # OTLP gRPC receiver
      depends_on:
        - zipkin-all-in-one
volumes:
  prometheus:
  grafana: